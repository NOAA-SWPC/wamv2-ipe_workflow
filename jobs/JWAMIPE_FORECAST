#!/bin/ksh
set -x

export RUN_ENVIR=${RUN_ENVIR:-"nco"}
export PS4='$SECONDS + '
date


##############################################
# Obtain unique process id (pid) and make temp directory
##############################################
jobid=${jobid:-${job}.$(hostname -s).$$}
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}
export DATA=${DATA:-${DATAROOT}/${jobid:?}}
mkdir -p $DATA
cd $DATA


##############################################
# Run setpdy and initialize PDY variables
##############################################
export cycle="t${cyc}z"
setpdy.sh
. ./PDY


##############################################
# Set com directory
##############################################
export CDATE=${CDATE:-${PDY}${cyc}}
export CDUMP=${CDUMP:-${RUN:-"wfs"}}


#############################
# Source relevant config files
#############################
configs="base fcst"
export EXPDIR=${EXPDIR:-$HOMEwfs/parm/config}
export config_path=${config_path:-$HOMEwfs/parm/config}
for config in $configs; do
    . $config_path/config.$config
    export err=$? ; err_chk
done

while read line; do export $line ; done < <($USHwamipe/create_config.py \
                                            -d $PARMDIR/default_config.json -p $DCOM)


##########################################
# Source machine runtime environment
##########################################
. $HOMEwfs/env/${machine}.env fcst
export err=$? ; err_chk


##############################################
# Determine Job Output Name on System
##############################################
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile


##############################################
# Begin JOB SPECIFIC work
##############################################
GDATE=$($NDATE -$assim_freq $CDATE)
gPDY=$(echo $GDATE | cut -c1-8)
gcyc=$(echo $GDATE | cut -c9-10)
GDUMP=${GDUMP:-"wdas"}

# Restart conditions for WFS cycle come from GDAS
rCDUMP=$CDUMP
[[ $CDUMP = "wfs" ]] && export rCDUMP="wdas"

# Forecast length for GFS forecast
if [ $CDUMP = "wfs" ]; then
    export FHMAX=$FHMAX_WFS
    export FHOUT=$FHOUT_WFS
    export FHMAX_HF=$FHMAX_HF_WFS
    export FHOUT_HF=$FHOUT_HF_WFS
elif [ $CDUMP = "wfr" ]; then
    export FHMAX=$FHMAX_WFR
    export FHOUT=$FHOUT_WFR
    export FHMAX_HF=$FHMAX_HF_WFR
    export FHOUT_HF=$FHOUT_HF_WFR
else
    export FHMAX_HF=0
    export FHOUT_HF=1
fi

export COMIN=${COMIN:-$(compath.py $NET/${wfs_ver}/$CDUMP.$PDY/$cyc)}
export COMIN_GES=${COMIN_GES:-$(compath.py $NET/${wfs_ver}/$GDUMP.$gPDY/$gcyc)}
export COMOUT=${COMOUT:-$(compath.py -o $NET/${wfs_ver}/$CDUMP.$PDY/$cyc)}

# IAU handling
if [ $DOIAU = "YES" ] ; then
    export SFCI=$COMIN/$CDUMP.t${cyc}z.${SFC:0:3}a03
    export SIGI=$COMIN_GES/$GDUMP.t${gcyc}z.${ATM:0:3}f03
    IAU_FG=$COMIN_GES/$GDUMP.t${gcyc}z.${ATM:0:3}f06
    IAU_ANL=$COMIN/$CDUMP.t${cyc}z.${ATM}

    export FHINI=3
    export FHROT=3
    export FHMAX=$((FHMAX+6))

    IAUVARS="iau=.true.,iaufiles_fg='${IAU_FG}',iaufiles_anl='${IAU_ANL}',iaufhrs=6,iau_delthrs=6,"
    export DYNVARS=$DYNVARS$IAUVARS
    export PHYVARS=$PHYVARS$IAUVARS
fi

###############################################################
# Run relevant exglobal script
env
echo "HAS BEGUN on `hostname`"

wfr_service=${wfr_service:-"NO"}

if [ $wfr_service = "YES" ]; then
    $SCRwamipe/exwamipe_fcst_service.sh
    export err=$? ; err_chk
else
    ${FORECASTSH:-$SCRwamipe/exwamipe_fcst_nems.sh}
    export err=$? ; err_chk
fi

##############################################
## Call dbn_alert
if [ $RUN == wfs ]; then
    if [ $SENDDBN == YES ]; then
        ${HOMEwfs}/scripts/exwamipe_dbnalert.sh
    fi
fi

##############################################
# End JOB SPECIFIC work
##############################################

##############################################
# Final processing
##############################################
if [ -e "$pgmout" ] ; then
  cat $pgmout
fi

echo "ENDED NORMALLY."

##########################################
# Remove the Temporary working directory
##########################################
cd $DATAROOT
[[ $KEEPDATA = "NO" ]] && rm -rf $DATA

date
exit 0
